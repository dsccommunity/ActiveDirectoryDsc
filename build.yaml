---
####################################################
#          ModuleBuilder Configuration             #
####################################################
BuiltModuleSubdirectory: builtModule
CopyPaths:
  - en-US
  - DSCResources
  - Modules
Encoding: UTF8
VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:
    DscResource.Common:
      CopyOnly: true
      Path: ./output/RequiredModules/DscResource.Common
      AddToManifest: false
      Exclude: PSGetModuleInfo.xml

####################################################
#       Sampler Pipeline Configuration             #
####################################################
BuildWorkflow:
  '.':
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output

  docs:
    - Generate_Conceptual_Help
    - Generate_Wiki_Content
    - Generate_Wiki_Sidebar
    - Clean_Markdown_Metadata
    - Package_Wiki_Content

  pack:
    - build
    - docs
    - package_module_nupkg

  hqrmtest:
    - DscResource_Tests_Stop_On_Fail

  # Defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold

  publish:
    - publish_module_to_gallery
    - Publish_Release_To_GitHub
    - Publish_GitHub_Wiki_Content

####################################################
#       PESTER  Configuration                      #
####################################################

Pester:
  OutputFormat: NUnitXML
  ExcludeFromCodeCoverage:
    - Modules/DscResource.Common
  Script:
    - tests/Unit
  Tag:
  CodeCoverageThreshold: 85
  CodeCoverageOutputFile: JaCoCo_coverage.xml
  CodeCoverageOutputFileEncoding: ascii

DscTest:
  ExcludeTag:
    - "Common Tests - New Error-Level Script Analyzer Rules"
  Tag:
  ExcludeSourceFile:
    - output
  ExcludeModuleFile:
    - Modules/DscResource.Common
  MainGitBranch: main

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
  Sampler.GitHubTasks:
    - '*.ib.tasks'
  DscResource.DocGenerator:
    - 'Task.*'
  DscResource.Test:
    - 'Task.*'

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

####################################################
#               GitHub Configuration               #
####################################################
GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  ReleaseAssets:
    - output/WikiContent.zip
  GitHubConfigUserName: dscbot
  GitHubConfigUserEmail: dsccommunity@outlook.com
  UpdateChangelogOnPrerelease: false

####################################################
#      DscResource.DocGenerator Configuration      #
####################################################
DscResource.DocGenerator:
  Generate_Conceptual_Help:
    MarkdownCodeRegularExpression:
      - '\`(.+?)\`' # Match inline code-block
      - '\\(\\)' # Match escaped backslash
      - '\[[^\[]+\]\((.+?)\)' # Match markdown URL
      - '_(.+?)_' # Match Italic (underscore)
      - '\*\*(.+?)\*\*' # Match bold
      - '\*(.+?)\*' # Match Italic (asterisk)
  Publish_GitHub_Wiki_Content:
    Debug: false
  Generate_Markdown_For_DSC_Resources:
    MofResourceMetadata:
      Type: MofResource
      Category: Resources
    ClassResourceMetadata:
      Type: ClassResource
      Category: Resources
    CompositeResourceMetadata:
      Type: CompositeResource
      Category: Resources
  Generate_Wiki_Sidebar:
    Debug: false
    AlwaysOverwrite: true
